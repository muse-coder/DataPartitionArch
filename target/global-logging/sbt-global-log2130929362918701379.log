[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\muse\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\muse\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 1.8.0_331)
[debug]       Load.loadUnit: plugins took 52.3417ms
[debug]       Load.loadUnit: defsScala took 0.2088ms
[debug] [Loading] Scanning directory C:\Users\muse\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\muse\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 9.1721 ms
[debug]           Load.resolveProject(global-plugins) took 94.3656ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\muse\.sbt\1.0\plugins, plugins: List(<none>))) took 118.1494ms
[debug] [Loading] Done in C:\Users\muse\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 130.2058ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.146ms
[debug]     Load.loadUnit(file:/C:/Users/muse/.sbt/1.0/plugins/, ...) took 187.6714ms
[debug]   Load.apply: load took 278.4457ms
[debug]   Load.apply: resolveProjects took 3.6015ms
[debug]   Load.apply: finalTransforms took 31.3197ms
[debug]   Load.apply: config.delegates took 4.0423ms
[debug]   Load.apply: Def.make(settings)... took 181.16ms
[debug]   Load.apply: structureIndex took 48.0909ms
[debug]   Load.apply: mkStreams took 1.2254ms
[info] loading global plugins from C:\Users\muse\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1198.7853ms
[debug]           Load.loadUnit: plugins took 22.6146ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory D:\postgraduate\chisel_learning\chisel-examples\project
[debug]             Load.loadUnit: mkEval took 8.6441ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\postgraduate\chisel_learning\chisel-examples\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2838 ms
[info] loading settings for project chisel-examples-build from idea.sbt ...
[debug]               Load.resolveProject(chisel-examples-build) took 1.9075ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chisel-examples-build, base: D:\postgraduate\chisel_learning\chisel-examples\project, plugins: List(<none>))) took 4.6158ms
[debug] [Loading] Done in D:\postgraduate\chisel_learning\chisel-examples\project, returning: (chisel-examples-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1189.3462ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.5964ms
[debug]         Load.loadUnit(file:/D:/postgraduate/chisel_learning/chisel-examples/project/, ...) took 1215.2531ms
[debug]       Load.apply: load took 1215.9041ms
[debug]       Load.apply: resolveProjects took 0.1629ms
[debug]       Load.apply: finalTransforms took 5.5218ms
[debug]       Load.apply: config.delegates took 0.3228ms
[debug]       Load.apply: Def.make(settings)... took 57.4166ms
[debug]       Load.apply: structureIndex took 13.8853ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from D:\postgraduate\chisel_learning\chisel-examples\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2103.7144ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory D:\postgraduate\chisel_learning\chisel-examples
[debug]       Load.loadUnit: mkEval took 0.1567ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\postgraduate\chisel_learning\chisel-examples, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.32 ms
[info] loading settings for project chisel-examples from build.sbt ...
[debug]         Load.resolveProject(chisel-examples) took 15.5468ms
[debug]       Load.loadTransitive: finalizeProject(Project(id chisel-examples, base: D:\postgraduate\chisel_learning\chisel-examples, plugins: List(<none>))) took 17.622ms
[debug] [Loading] Done in D:\postgraduate\chisel_learning\chisel-examples, returning: (chisel-examples)
[debug]     Load.loadUnit: loadedProjectsRaw took 819.6931ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.7485ms
[debug]   Load.loadUnit(file:/D:/postgraduate/chisel_learning/chisel-examples/, ...) took 2927.8143ms
[debug] Load.apply: load took 2928.6241ms
[debug] Load.apply: resolveProjects took 0.0653ms
[debug] Load.apply: finalTransforms took 12.3132ms
[debug] Load.apply: config.delegates took 0.1478ms
[debug] Load.apply: Def.make(settings)... took 50.4508ms
[debug] Load.apply: structureIndex took 13.1555ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to chisel-examples (in build file:/D:/postgraduate/chisel_learning/chisel-examples/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64796 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64796, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to chisel-examples (in build file:/D:/postgraduate/chisel_learning/chisel-examples/)
[debug] > Exec(idea-shell, None, None)
